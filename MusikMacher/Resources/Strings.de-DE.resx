<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddTag" xml:space="preserve">
    <value>Tag hinzufügen</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="CachingWaveforms" xml:space="preserve">
    <value>Signalverläufe vorladen</value>
  </data>
  <data name="CheckForUpdate" xml:space="preserve">
    <value>auf Updates prüfen</value>
  </data>
  <data name="ContinuePlayback" xml:space="preserve">
    <value>Weiter abspielen</value>
  </data>
  <data name="ContinuePlaybackDescription" xml:space="preserve">
    <value>Die nächste Spur automatisch abspielen, sobald die aktuelle endet. Wenn aktiviert, ahmt diese Funktion das Standardverhalten eines Musikplayers nach.</value>
  </data>
  <data name="ContinuePlaybackFalse" xml:space="preserve">
    <value>Wiedergabe stoppen</value>
  </data>
  <data name="ContinuePlaybackTrue" xml:space="preserve">
    <value>Nächsten Song spielen</value>
  </data>
  <data name="CopyAsPath" xml:space="preserve">
    <value>Dateipfad kopieren</value>
  </data>
  <data name="CopyFile" xml:space="preserve">
    <value>Datei kopieren</value>
  </data>
  <data name="CopyName" xml:space="preserve">
    <value>Name kopieren</value>
  </data>
  <data name="CreationTime" xml:space="preserve">
    <value>Erstellungszeit</value>
  </data>
  <data name="DownloadPost" xml:space="preserve">
    <value>Herunterladen</value>
  </data>
  <data name="DownloadPre" xml:space="preserve">
    <value />
  </data>
  <data name="Effects" xml:space="preserve">
    <value>Effekte</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>Englisch</value>
  </data>
  <data name="ErrorOccurred" xml:space="preserve">
    <value>Es ist ein Fehler aufgetreten: {0}</value>
  </data>
  <data name="EstimatedTimeLeft" xml:space="preserve">
    <value>Geschätzte verbleibende Zeit:</value>
  </data>
  <data name="FailedSubsection" xml:space="preserve">
    <value>Fehler beim Laden aus {0}: Der Ordner existiert nicht.</value>
  </data>
  <data name="FailedToRetrieve" xml:space="preserve">
    <value>Fehler beim Aufrufen von neuer Versionsinformation. Statuscode: {0}</value>
  </data>
  <data name="Favorite" xml:space="preserve">
    <value>Favorisieren</value>
  </data>
  <data name="FindInSongs" xml:space="preserve">
    <value>In Liedern suchen (Ctrl + F)</value>
  </data>
  <data name="FindInTags" xml:space="preserve">
    <value>In Tags suchen (Ctrl + T)</value>
  </data>
  <data name="Fixes" xml:space="preserve">
    <value>Fixes</value>
  </data>
  <data name="German" xml:space="preserve">
    <value>Deutsch</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>Ausblenden</value>
  </data>
  <data name="HideTrack" xml:space="preserve">
    <value>Lied ausblenden</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Importieren</value>
  </data>
  <data name="ImportDone" xml:space="preserve">
    <value>Fertig.</value>
  </data>
  <data name="ImportInto" xml:space="preserve">
    <value>Importieren in</value>
  </data>
  <data name="ImportSubfolders" xml:space="preserve">
    <value>Unterordner importieren</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="LanguageDescription" xml:space="preserve">
    <value>Anzeigesprache der Bedienoberfläche</value>
  </data>
  <data name="LastChecked" xml:space="preserve">
    <value>Letzte Prüfung:</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Länge</value>
  </data>
  <data name="LoadCovers" xml:space="preserve">
    <value>Coverart laden</value>
  </data>
  <data name="LoadCoversDescription" xml:space="preserve">
    <value>Wenn das Programm oft abstuertzt hilft es manchmal wenn Covers nicht geladen werden</value>
  </data>
  <data name="LoadCoversFalse" xml:space="preserve">
    <value>keine Coverarts</value>
  </data>
  <data name="LoadCoversTrue" xml:space="preserve">
    <value>Coverarts laden</value>
  </data>
  <data name="LoadData" xml:space="preserve">
    <value>Daten laden</value>
  </data>
  <data name="LoadedSuccessfulSubsection" xml:space="preserve">
    <value> {0} bekannte Lieder gefunden und  {1} neue hinzugefügt</value>
  </data>
  <data name="LoadingDataFrom" xml:space="preserve">
    <value>Lade Lieder aus `{0}`</value>
  </data>
  <data name="LoadingDataFromSublocation" xml:space="preserve">
    <value>Lade Lieder aus Unterordner {0}</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NeverChecked" xml:space="preserve">
    <value>Noch nicht geprüft</value>
  </data>
  <data name="NewVersionAvailable" xml:space="preserve">
    <value>Eine neue Version ist verfügbar ({0}), du bist gerade auf {1}</value>
  </data>
  <data name="NoSongsFound" xml:space="preserve">
    <value>Keine Lieder gefunden.</value>
  </data>
  <data name="One" xml:space="preserve">
    <value>Einen</value>
  </data>
  <data name="OpenConsole" xml:space="preserve">
    <value>Progamm Log</value>
  </data>
  <data name="OpenConsoleDescription" xml:space="preserve">
    <value>Um die Fehlerbehebung zu vereinfachen kann die WIndows Console geoffnet werden um Logeinträge in Echzeit anzuschauen. Neustart des Programms beneötigt um Konsole zu öffnen,</value>
  </data>
  <data name="PathToSearch" xml:space="preserve">
    <value>Zu durchsuchender Dateipfad</value>
  </data>
  <data name="PauseTooltip" xml:space="preserve">
    <value>Pause (Space)</value>
  </data>
  <data name="PlayEffectsFromStart" xml:space="preserve">
    <value>Effekte von Anfang an abspielen</value>
  </data>
  <data name="PlayEffectsFromStartDescription" xml:space="preserve">
    <value>Effekte werden immer vom Anfang abgespielt</value>
  </data>
  <data name="PlayEffectsFromStartFalse" xml:space="preserve">
    <value>Von der initialen Wiedergabeposition abspielen</value>
  </data>
  <data name="PlayEffectsFromStartTrue" xml:space="preserve">
    <value>Von Anfang an abspielen</value>
  </data>
  <data name="PlayTooltip" xml:space="preserve">
    <value>Wiedergabe (Space)</value>
  </data>
  <data name="PreloadAllWaveforms" xml:space="preserve">
    <value>Alle Signalverläufe vorladen</value>
  </data>
  <data name="Premiere" xml:space="preserve">
    <value>Premiere</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Umbenennen</value>
  </data>
  <data name="ResetSearch" xml:space="preserve">
    <value>Suche zurücksetzen</value>
  </data>
  <data name="ResetTags" xml:space="preserve">
    <value>Tag-Auswahl zurücksetzen</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Einstellungen</value>
  </data>
  <data name="SettingsApperance" xml:space="preserve">
    <value>Aussehen</value>
  </data>
  <data name="SettingsLanguage" xml:space="preserve">
    <value>Sprache</value>
  </data>
  <data name="SettingsPlayback" xml:space="preserve">
    <value>Wiedergabe</value>
  </data>
  <data name="SettingsTags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="SettingsVersionAndUpdates" xml:space="preserve">
    <value>Version &amp; Updates</value>
  </data>
  <data name="ShowHiddenTagsTooltip" xml:space="preserve">
    <value>Ausgeblendete Tags anzeigen</value>
  </data>
  <data name="ShowHiddenTooltip" xml:space="preserve">
    <value>Ausgeblendete Lieder anzeigen</value>
  </data>
  <data name="SkipBackTooltip" xml:space="preserve">
    <value>Zurückspulen (linke Pfeiltaste)</value>
  </data>
  <data name="SkipBackTooltipDescription" xml:space="preserve">
    <value>Die aktuelle Wiedergabe vorspulen. Sprungweite ist in den Einstellungen konfigurierbar.</value>
  </data>
  <data name="SkipForwardTooltip" xml:space="preserve">
    <value>Vorspulen (rechte Pfeiltaste)</value>
  </data>
  <data name="SkipForwardTooltipDescription" xml:space="preserve">
    <value>Die aktuelle Wiedergabe zurückspulen. Sprungweite ist in den Einstellungen konfigurierbar.</value>
  </data>
  <data name="SkipPercentage" xml:space="preserve">
    <value>Sprungweite</value>
  </data>
  <data name="SkipPercentageDescription" xml:space="preserve">
    <value>Prozentualer Anteil des Liedes, der beim Drücken der Pfeiltasten links/rechts übersprungen werden soll</value>
  </data>
  <data name="Songs" xml:space="preserve">
    <value>Lieder</value>
  </data>
  <data name="StartPlaybackPosition" xml:space="preserve">
    <value>Initiale Wiedergabeposition</value>
  </data>
  <data name="StartPlaybackPositionDescription" xml:space="preserve">
    <value>Position innerhalb des Songs, an dem die Wiedergabe startet</value>
  </data>
  <data name="TagFilter" xml:space="preserve">
    <value>Tag-Filterung</value>
  </data>
  <data name="TagFilterDescription" xml:space="preserve">
    <value>Songs müssen nur einen ausgewählten Tag haben oder sie müssen alle haben.</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="TryWithoutTagsOrSearch" xml:space="preserve">
    <value>Ohne Tag-Auswahl oder Suche probieren?</value>
  </data>
  <data name="UnhideTrack" xml:space="preserve">
    <value>Lied einblenden</value>
  </data>
  <data name="UpToDate" xml:space="preserve">
    <value>Musik Macher ist auf dem neuesten Stand</value>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>Titel des Fensters</value>
  </data>
  <data name="WindowTitleDescription" xml:space="preserve">
    <value>Gib dem Fenster einen individuellen Titel. Du könntest zum Beispiel darauf hinweisen, dass man mit Twitch Prime abonnieren kann oder den !macher-Befehl erwähnen.</value>
  </data>
</root>